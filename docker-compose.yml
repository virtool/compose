version: "3.1"
services:
  api:
    command: server --host=0.0.0.0
    depends_on:
      - mongo
      - redis
      - postgres
    environment:
      VT_DATA_PATH: /data
      VT_DB_CONNECTION_STRING: mongodb://mongo:27017/virtool
      VT_DEV: "true"
      VT_POSTGRES_CONNECTION_STRING: postgresql+asyncpg://virtool:virtool@postgres/virtool
      VT_REDIS_CONNECTION_STRING: redis://redis:6379
    image: ghcr.io/virtool/virtool:11.1.1
    ports:
      - 9950:9950
    profiles:
      - all
      - ui
    volumes:
      - source: /home/igboyes/Projects/compose/data
        target: /data
        type: bind
  build-index:
    entrypoint: run-workflow
    environment:
      VT_JOBS_API_CONNECTION_STRING: "http://jobs-api:9990"
      VT_REDIS_CONNECTION_STRING: "redis://redis:6379"
      VT_REDIS_LIST_NAME: "jobs_build_index"
      VT_MEM: 2
      VT_PROC: 2
    image: virtool/build-index:4.0.0
    restart: always
    profiles:
      - all
      - backend
      - ui
  create-sample:
    entrypoint: run-workflow
    environment:
      VT_JOBS_API_CONNECTION_STRING: "http://jobs-api:9990"
      VT_REDIS_CONNECTION_STRING: "redis://redis:6379"
      VT_REDIS_LIST_NAME: "jobs_create_sample"
      VT_MEM: 2
      VT_PROC: 2
    image: virtool/create-sample:3.0.1
    restart: always
    profiles:
      - all
      - backend
      - ui
  create-subtraction:
    entrypoint: run-workflow
    environment:
      VT_JOBS_API_CONNECTION_STRING: "http://jobs-api:9990"
      VT_REDIS_CONNECTION_STRING: "redis://redis:6379"
      VT_REDIS_LIST_NAME: "jobs_create_subtraction"
      VT_MEM: 2
      VT_PROC: 2
    image: virtool/create-subtraction:4.0.2
    restart: always
    profiles:
      - all
      - backend
      - ui
  nuvs:
    entrypoint: run-workflow
    environment:
      VT_JOBS_API_CONNECTION_STRING: "http://jobs-api:9990"
      VT_REDIS_CONNECTION_STRING: "redis://redis:6379"
      VT_REDIS_LIST_NAME: "jobs_nuvs"
      VT_MEM: 8
      VT_PROC: 8
    image: virtool/nuvs:4.0.0
    restart: always
    profiles:
      - all
      - backend
      - ui
  pathoscope:
    entrypoint: run-workflow
    environment:
      VT_JOBS_API_CONNECTION_STRING: "http://jobs-api:9990"
      VT_REDIS_CONNECTION_STRING: "redis://redis:6379"
      VT_REDIS_LIST_NAME: "jobs_pathoscope_bowtie"
      VT_MEM: 8
      VT_PROC: 8
    image: virtool/pathoscope:4.0.2
    restart: always
    profiles:
      - all
      - backend
      - ui
  jobs-api:
    command: jobsAPI --host=0.0.0.0 --port=9990
    depends_on:
      - mongo
      - redis
      - postgres
    environment:
      VT_DATA_PATH: /data
      VT_DB_CONNECTION_STRING: mongodb://mongo:27017/virtool
      VT_POSTGRES_CONNECTION_STRING: postgresql+asyncpg://virtool:virtool@postgres/virtool
      VT_REDIS_CONNECTION_STRING: redis://redis:6379
    image: ghcr.io/virtool/virtool:10.7.1
    ports:
      - 9990:9990
    volumes:
      - source: /home/igboyes/Projects/compose/data
        target: /data
        type: bind
    profiles:
      - all
      - backend
      - ui
  migration:
    environment:
      SQLALCHEMY_URL: postgresql+asyncpg://virtool:virtool@postgres/virtool
      VT_MIGRATION_APPLY_MONGO_CONNECTION_STRING: mongodb://mongo:27017/virtool
    image: virtool/migration:1.6.0
    profiles:
      - all
      - backend
      - ui
  mongo:
    image: bitnami/mongodb:4.4.10
    environment:
      ALLOW_EMPTY_PASSWORD: true
      MONGODB_REPLICA_SET_MODE: primary
      MONGODB_ADVERTISED_HOSTNAME: mongo
    ports:
      - 27017:27017
    volumes:
      - mongo_data:/bitnami/mongodb
    profiles:
      - all
      - test
      - backend
      - ui
  postgres:
    command: -c fsync=off -c shared_buffers=2000MB
    environment:
      POSTGRES_PASSWORD: virtool
      POSTGRES_USER: virtool
      POSTGRES_DB: virtool
    image: postgres:14.5
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    profiles:
      - all
      - test
      - backend
      - ui
  redis:
    image: redis:6.0
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data
    profiles:
      - all
      - test
      - backend
      - ui
  ui:
    environment:
      VT_UI_API_URL: http://host.docker.internal:9950
      VT_UI_HOST: 0.0.0.0
      VT_UI_PORT: 9900
      VT_UI_USE_PROXY: "true"
    extra_hosts:
      - host.docker.internal:host-gateway
    image: virtool/ui:3.0.11
    ports:
      - 9900:9900
    profiles:
      - all
      - backend
  postgres-openfga:
    image: postgres:14.5
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: openfga
    profiles:
      - all
      - backend
      - test
      - ui
    volumes:
      - postgres_openfga_data:/var/lib/postgresql/data
  migrate:
    image: openfga/openfga:v0.2.5
    depends_on:
      - postgres-openfga
    command: |
      migrate
    environment:
      OPENFGA_DATASTORE_ENGINE: postgres
      OPENFGA_DATASTORE_URI: postgres://postgres:password@postgres-openfga:5432/openfga
    profiles:
      - all
      - backend
      - test
      - ui
  openfga:
    image: openfga/openfga:v0.2.5
    environment:
      OPENFGA_DATASTORE_ENGINE: postgres
      OPENFGA_DATASTORE_URI: postgres://postgres:password@postgres-openfga:5432/openfga
      OPENFGA_LOG_FORMAT: json
    command: run
    depends_on:
      - postgres-openfga
      - migrate
    profiles:
      - all
      - backend
      - test
      - ui
    ports:
      - "8080:8080"
      - "3000:3000"
volumes:
  mongo_data: null
  postgres_data: null
  postgres_openfga_data: null
  redis_data: null
